<?xml version="1.0"?>

<launch>

   <!-- GAZEBO-->
  
 
   <arg name="paused" default="false"/>
   <arg name="use_sim_time" default="true"/>
   <arg name="gui" default="true"/>
   <arg name="headless" default="true"/>
   <arg name="debug" default="false"/>


   <include file="$(find gazebo_ros)/launch/empty_world.launch">
	    <arg name="world_name" value="$(find arm_ax_control)/worlds/empty.world"/>
	    <arg name="paused" value="$(arg paused)"/>
	    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
	    <arg name="gui" value="$(arg gui)"/>
	    <arg name="headless" value="$(arg headless)"/>
	    <arg name="debug" value="$(arg debug)"/>
   </include>

	
   <include file="$(find arm_ax_moveit)/launch/demo.launch">
         <arg name="z" default="0.0"/>
 	 <arg name="x" default="-1.5"/>
 	 <arg name="y" default="0.0"/>
	 <arg name="use_rviz" default="true"/>
   </include>



   <!--Dynamixel Controllers-->
   <arg name="dynamixel_namespace" value="/" />
   <rosparam ns="$(arg dynamixel_namespace)" file="$(find arm_ax_control)/config/arm_dynamixel_dual.yaml" command="load"/>
   
  
   <node ns="$(arg dynamixel_namespace)" name="dynamixel_manager" pkg="dynamixel_controllers" output="screen" 
      type="controller_manager.py" required="true">
      <rosparam>
         namespace: pi_dynamixel_manager
         diagnostics_rate: 1
         serial_ports:
            dynamixel_ax12:
               port_name: "/dev/ttyUSB0"
               baud_rate: 1000000
               min_motor_id: 1
               max_motor_id: 30
               update_rate: 20
               diagnostics:
                  error_level_temp: 65
                  warn_level_temp: 60
      </rosparam>
   </node>
  
  <node ns="$(arg dynamixel_namespace)" pkg="dynamixel_controllers" name="arm_controller" type="controller_spawner.py" output="screen" 
      args="--manager=pi_dynamixel_manager
            --type=meta
      arm_controller_dynamixel
      joint1_controller
      joint2_controller
      joint2g_controller
      joint3_controller
      joint4_controller
      joint5_controller
      joint6_controller"/>
  
   <node ns="$(arg dynamixel_namespace)" pkg="dynamixel_controllers" name="dynamixel_ax12" output="screen" 
   type="controller_spawner.py"
        args="--manager=pi_dynamixel_manager
              --port=dynamixel_ax12
              --type=simple
            joint1_controller
      joint2_controller
      joint2g_controller
      joint3_controller
      joint4_controller
      joint5_controller
      joint6_controller"/>


   <!--arm_ax_control_node-->
   <node name="arm_ax_control_node" pkg="arm_ax_control" type="arm_ax_control_node" output="screen"/>
   
   <!--Controller-->
   <node name="joystick_node" pkg="joy" type="joy_node" output="screen"/>


</launch>
